{
  "Parameters": {
    "Name": {
      "Type": "String"
    },
    "domain": {
      "Type": "String"
    },
    "accountNumber": {
      "Type": "String"
    }
  },
  "Resources": {
    "myVolume": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "Size": "20",
        "AvailabilityZone": {
          "Fn::ImportValue": "myAvailabilityZone1"
        },
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Name"
                  },
                  "EC2Volume"
                ]
              ]
            }
          }
        ]
      }
    },
    "myEC2Instance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "myRDSDBInstance",
      "Properties": {
        "IamInstanceProfile": {
          "Fn::ImportValue": "myIAMInstanceProfile"
        },
        "ImageId": "ami-9887c6e7",
        "InstanceType": "t2.micro",
        "DisableApiTermination": "false",
        "KeyName": "myKey",
        "SubnetId": {
          "Fn::ImportValue": "mySubnet1"
        },
        "SecurityGroupIds": [
          {
            "Ref": "csye6225webapp"
          },
          {
            "Ref": "csye6225rds"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdk",
            "VolumeId": {
              "Ref": "myVolume"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash -xe ",
                "yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
                "systemctl start ntpd",
                "groupadd tomcat",
                "useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
                "cd /tmp",
                "wget http://apache.mirrors.pair.com/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz",
                "mkdir /opt/tomcat",
                "tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
                "cd /opt/tomcat",
                "chgrp -R tomcat /opt/tomcat",
                "chmod -R g+r conf",
                "chmod g+x conf",
                "chown -R tomcat webapps/ work/ temp/ logs/",
                "cd /usr/lib/systemd/system",
                "touch tomcat.service",
                "echo '[Unit]' > tomcat.service",
                "echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
                "echo 'After=syslog.target network.target' >> tomcat.service",
                "echo '[Service]' >> tomcat.service",
                "echo 'Type=forking' >> tomcat.service",
                "echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
                "echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
                "echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
                "echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
                "echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
                "echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
                "echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
                "echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
                "echo 'User=tomcat' >> tomcat.service",
                "echo 'Group=tomcat' >> tomcat.service",
                "echo 'UMask=0007' >> tomcat.service",
                "echo 'RestartSec=10' >> tomcat.service",
                "echo 'Restart=always' >> tomcat.service",
                "echo '[Install]' >> tomcat.service",
                "echo 'WantedBy=multi-user.target' >> tomcat.service",
                "cd /",
                "cd /opt/tomcat/bin",
                "touch setenv.sh",
                "echo 'export JAVA_OPTS='-Dlocal_location=/home/centos/'' >> setenv.sh",
                "echo 'export JAVA_OPTS='-Dend_point_url=https://s3.us-east-1.amazonaws.com'' >> setenv.sh",
                "echo 'export JAVA_OPTS='-Daccess_key_id=AKIAJHQBAEECVNNBNMVA'' >> setenv.sh",
                "echo 'export JAVA_OPTS='-Dsecret_access_key=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'' >> setenv.sh",
                "echo 'export JAVA_OPTS='-Ds3_bucket=csye6225-fall2018-zhangzhiyo.me.csye6225.com'' >> setenv.sh",
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo 'export JAVA_OPTS='-Dspring_datasource_url=jdbc:postgresql://",
                      {
                        "Fn::GetAtt": [
                          "myRDSDBInstance",
                          "Endpoint.Address"
                        ]
                      },
                      ":5432/csye6225'' >> setenv.sh"
                    ]
                  ]
                },
                "echo 'export JAVA_OPTS='-Dspring_datasource_username=csye6225master'' >> setenv.sh",
                "echo 'export JAVA_OPTS='-Dspring_datasource_password=csye6225password'' >> setenv.sh",
                "systemctl daemon-reload",
                "systemctl start tomcat.service",
                "cd ~",
                "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install",
                "chmod +x ./install",
                "./install auto",
                "service codedeploy-agent start"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Name"
                  },
                  "EC2Instance"
                ]
              ]
            }
          }
        ]
      }
    },
    "csye6225webapp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "csye6225webapp",
        "VpcId": {
          "Fn::ImportValue": "myVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Name"
                  },
                  "EC2SecurityGroup1"
                ]
              ]
            }
          }
        ]
      }
    },
    "csye6225rds": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "csye6225rds",
        "VpcId": {
          "Fn::ImportValue": "myVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "5432",
            "ToPort": "5432",
            "SourceSecurityGroupId": {
              "Ref": "csye6225webapp"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Name"
                  },
                  "EC2SecurityGroup2"
                ]
              ]
            }
          }
        ]
      }
    },
    "myDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "csye6225",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Name"
                  },
                  "DynamoDBTable"
                ]
              ]
            }
          }
        ]
      }
    },
    "myS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "domain"
              },
              ".csye6225.com"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Name"
                  },
                  "S3Bucket"
                ]
              ]
            }
          }
        ]
      }
    },
    "myWebapp": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ApplicationName": "myWebapp"
      }
    },
    "myCodeDeployDeploymentGroup": {
      "DependsOn": "myEC2Instance",
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "myWebapp"
        },
        "DeploymentConfigName": "CodeDeployDefault.OneAtATime",
        "DeploymentGroupName": {
          "Ref": "myWebapp"
        },
        "DeploymentStyle": {
          "DeploymentType": "IN_PLACE",
          "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL"
        },
        "Ec2TagFilters": [
          {
            "Key": "Name",
            "Type": "KEY_AND_VALUE",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Name"
                  },
                  "EC2Instance"
                ]
              ]
            }
          }
        ],
        "ServiceRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              {
                "Ref": "accountNumber"
              },
              ":role/CodeDeployServiceRole"
            ]
          ]
        }
      }
    },
    "myRDSDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "description",
        "SubnetIds": {
          "Fn::Split": [
            ",",
            {
              "Fn::ImportValue": "mySubnets"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Name"
                  },
                  "RDSDBSubnetGroup"
                ]
              ]
            }
          }
        ]
      }
    },
    "myRDSDBInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "100",
        "DBName": "csye6225",
        "DBInstanceClass": "db.t2.medium",
        "DBInstanceIdentifier": "csye6225-spring2018",
        "MultiAZ": "false",
        "Engine": "postgres",
        "MasterUsername": "csye6225master",
        "MasterUserPassword": "csye6225password",
        "DBSubnetGroupName": {
          "Ref": "myRDSDBSubnetGroup"
        },
        "PubliclyAccessible": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Name"
                  },
                  "RDSDBInstance"
                ]
              ]
            }
          }
        ]
      }
    }
  }
}